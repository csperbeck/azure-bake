{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "apiManagementServiceName": {
        "type": "string",
        "metadata": {
          "description": "APIM service name"
        }
      },
      "publisherEmail": {
        "type": "string",
        "minLength": 1,
        "metadata": {
          "description": "The email address of the owner of the service"
        }
      },
      "publisherName": {
        "type": "string",
        "minLength": 1,
        "metadata": {
          "description": "The name of the owner of the service"
        }
      },
      "sku": {
        "type": "string",
        "allowedValues": [
          "Developer",
          "Standard",
          "Premium"
        ],
        "defaultValue": "Developer",
        "metadata": {
          "description": "The pricing tier of this API Management service"
        }
      },
      "authorizationServer": {
        "type": "string",
        "minLength": 1,
        "metadata": {
          "description": "The hchb authorizaton server"
        }
      },
      "skuCount": {
        "type": "int",
        "defaultValue": 1,
        "metadata": {
          "description": "The instance size of this API Management service."
        }
      },
      "VirtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "Virtual Network name"
        }
      },
      "VirtualNetworkResourceGroupName": {
        "type": "string",
        "metadata": {
          "description": "Virtual Network name"
        }
      },
      "SubnetName": {
        "type": "string",
        "metadata": {
          "description": "Subnet Name"
        }
      },
      "dallasIp": {
        "type": "string",
        "defaultValue": 1,
        "metadata": {
          "description": "The hchb-apim Dallas Ip Address"
        }
      },
      "davacoIp": {
        "type": "string",
        "defaultValue": 1,
        "metadata": {
          "description": "The hchb-apim Davaco Ip Address"
        }
      },
      "olympiaIp": {
        "type": "string",
        "defaultValue": 1,
        "metadata": {
          "description": "The hchb-apim Olympia Ip Address"
        }
      },
      "louisvilleIp": {
        "type": "string",
        "defaultValue": 1,
        "metadata": {
          "description": "The hchb-apim Lousville Ip Address"
        }
      },
      "applicationType": {
        "type": "string",
        "defaultValue": "web",
        "allowedValues": [
          "web",
          "java",
          "other"
        ],
        "metadata": {
          "description": "Enter the application type."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "East US",
        "allowedValues": [
          "East Asia",
          "Southeast Asia",
          "Central US",
          "East US",
          "East US 2",
          "West US",
          "North Central US",
          "South Central US",
          "North Europe",
          "West Europe",
          "Japan West",
          "Japan East",
          "Brazil South",
          "Canada Central",
          "Canada East"
        ],
        "metadata": {
          "description": "Enter the application location."
        }
      },
      "environment": {
        "type": "string",
        "defaultValue": "Development",
        "allowedValues": [
          "SBX",
          "DEV",
          "QA",
          "STG",
          "TRN",
          "PLT",
          "PRD"
        ],
        "metadata": {
          "description": "The name of the environment"
        }
      },
      "locationCode": {
        "type": "string",
        "metadata": {
          "description": "Enter Location Code"
        },
        "defaultValue": "UE",
        "allowedValues": [
          "AE",
          "AS",
          "UC",
          "UE",
          "UE2",
          "UW",
          "UNC",
          "USC",
          "EN",
          "EW",
          "JW",
          "JE",
          "BS",
          "CC",
          "CE"
        ]
      },
      "priceCode": {
        "type": "string",
        "defaultValue": "1",      
        "metadata": {
          "description": "1 = Basic, 2 = Enterprise"
        }
      },
      "priceCodeInt": {
        "type": "int",
        "defaultValue": "[int(parameters('priceCode'))]",
        "allowedValues": [
          1,
          2
        ],
        "metadata": {
          "description": "Price Code Int Conversion"
        }
      },
      "dailyQuota": {
        "type": "string",
        "defaultValue": "100",
        "metadata": {
          "description": "Enter daily quota in GB."
        }
      },
      "dailyQuotaInt": {
        "type": "int",
        "defaultValue": "[int(parameters('dailyQuota'))]",
        "minValue": 1,
        "metadata": {
          "description": "Quota Int Conversion"
        }
      },
      "dailyQuotaResetTime": {
        "type": "string",
        "defaultValue": "24",
        "metadata": {
          "description": "Enter daily quota reset hour in UTC (0 to 23). Values outside the range will get a random reset hour."
        }
      },
      "dailyQuotaResetTimeInt": {
        "type": "int",
        "defaultValue": "[int(parameters('dailyQuotaResetTime'))]",
        "metadata": {
          "description": "Reset Time Int Conversion"
        }
      },
      "warningThreshold": {
        "type": "string",
        "defaultValue": "90",
        "metadata": {
          "description": "Enter the % value of daily quota after which warning mail to be sent. "
        }
      },
      "warningThresholdInt": {
        "type": "int",
        "defaultValue": "[int(parameters('warningThreshold'))]",
        "minValue": 1,
        "maxValue": 100,
        "metadata": {
          "description": "Warning Threshold Int Conversion"
        }
      }
    },
    "variables": {
      "vnetID": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
      "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]",
      "appInsightsName": "[toUpper(concat('AI','_',parameters('apiManagementServiceName'),'_',parameters('locationCode'),'_',parameters('environment')))]",
      "priceArray": [
        "Basic",
        "Application Insights Enterprise"
      ],
      "pricePlan": "[take(variables('priceArray'),parameters('priceCodeInt'))]",
      "billingplan": "[concat(variables('appInsightsName'),'/', variables('pricePlan')[0])]"
    },
    "outputs": {
      "instrumentationKey": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
      }
    },
    "resources": [
      {
        "apiVersion": "2017-03-01",
        "name": "[toLower(parameters('apiManagementServiceName'))]",
        "type": "Microsoft.ApiManagement/service",
        "location": "[resourceGroup().location]",
        "tags": {},
        "sku": {
          "name": "[parameters('sku')]",
          "capacity": "[parameters('skuCount')]"
        },
        "properties": {
          "publisherEmail": "[parameters('publisherEmail')]",
          "publisherName": "[parameters('publisherName')]",
          "customProperties": {
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "False",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "false",
            "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False"
          },
          "virtualNetworkType": "External",
          "virtualNetworkConfiguration": {
            "subnetResourceId": "[variables('subnet1Ref')]",
            "location": "[resourceGroup().location]"
          }
        }
      },
      {
        "type": "Microsoft.ApiManagement/service/properties",
        "name": "[concat(toLower(parameters('apiManagementServiceName')),'/authorizationServer')]",
        "apiVersion": "2017-03-01",
        "properties": {
          "displayName": "AuthorizationServer",
          "value": "[parameters('authorizationserver')]",
          "tags": [
            "HCHB_APIM"
          ],
          "secret": false
        },
        "resources": [],
        "dependsOn": [
          "[resourceId('Microsoft.ApiManagement/service',toLower(parameters('apiManagementServiceName')))]"
        ]
      },
      {
        "type": "Microsoft.ApiManagement/service/properties",
        "name": "[concat(toLower(parameters('apiManagementServiceName')),'/dallasIp')]",
        "apiVersion": "2017-03-01",
        "properties": {
          "displayName": "dallasIp",
          "value": "[parameters('dallasIp')]",
          "tags": [
            "HCHB_APIM"
          ],
          "secret": false
        },
        "resources": [],
        "dependsOn": [
          "[resourceId('Microsoft.ApiManagement/service',toLower(parameters('apiManagementServiceName')))]"
        ]
      },
      {
        "type": "Microsoft.ApiManagement/service/properties",
        "name": "[concat(toLower(parameters('apiManagementServiceName')),'/davacoIp')]",
        "apiVersion": "2017-03-01",
        "properties": {
          "displayName": "davacoIp",
          "value": "[parameters('davacoIp')]",
          "tags": [
            "HCHB_APIM"
          ],
          "secret": false
        },
        "resources": [],
        "dependsOn": [
          "[resourceId('Microsoft.ApiManagement/service',toLower(parameters('apiManagementServiceName')))]"
        ]
      },
      {
        "type": "Microsoft.ApiManagement/service/properties",
        "name": "[concat(toLower(parameters('apiManagementServiceName')),'/olympiaIp')]",
        "apiVersion": "2017-03-01",
        "properties": {
          "displayName": "olympiaIp",
          "value": "[parameters('olympiaIp')]",
          "tags": [
            "HCHB_APIM"
          ],
          "secret": false
        },
        "resources": [],
        "dependsOn": [
          "[resourceId('Microsoft.ApiManagement/service',toLower(parameters('apiManagementServiceName')))]"
        ]
      },
      {
        "type": "Microsoft.ApiManagement/service/properties",
        "name": "[concat(toLower(parameters('apiManagementServiceName')),'/louisvilleIp')]",
        "apiVersion": "2017-03-01",
        "properties": {
          "displayName": "louisvilleIp",
          "value": "[parameters('louisvilleIp')]",
          "tags": [
            "HCHB_APIM"
          ],
          "secret": false
        },
        "resources": [],
        "dependsOn": [
          "[resourceId('Microsoft.ApiManagement/service',toLower(parameters('apiManagementServiceName')))]"
        ]
      },
      {
        "type": "Microsoft.ApiManagement/service/loggers",
        "name": "[concat(toLower(parameters('apiManagementServiceName')), '/',variables('appInsightsName'))]",
        "apiVersion": "2017-03-01",
        "scale": null,
        "properties": {
          "loggerType": "applicationInsights",
          "description": "Application Insight Instance",
          "credentials": {
            "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]"
          },
          "isBuffered": true
        },
        "dependsOn": [
          "[resourceId('Microsoft.ApiManagement/service', toLower(parameters('apiManagementServiceName')))]",
          "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
        ]
      }      
    ]
  }